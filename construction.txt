this chat web site construction details for myself

create a folder chatsmitha
cd chatsmitha //change directory to chatSmitha in terminal
npm init   //creates json file in terminal
npm install express --save   //installs express package, created node-module folder
npm socket.io --save  //installs socket package inside folder node-module and saves it as a dependency on json file

create seerver.js file
create public folder
create index.html inside public
type html then press tab inside index.html, fills the html form

change main: index.js to main: app.js on package.json sendfile

node app  //terminal command to start app.js server file
ctrl+C  //terminal command to quit running app.js server file

chat.uzkino.com port:80     //change host : port on app file



Emit cheatsheet

io.on('connect', onConnect);

function onConnect(socket){

  // sending to the client
  socket.emit('hello', 'can you hear me?', 1, 2, 'abc');

  // sending to all clients except sender
  socket.broadcast.emit('broadcast', 'hello friends!');

  // sending to all clients in 'game' room except sender
  socket.to('game').emit('nice game', "let's play a game");

  // sending to all clients in 'game1' and/or in 'game2' room, except sender
  socket.to('game1').to('game2').emit('nice game', "let's play a game (too)");

  // sending to all clients in 'game' room, including sender
  io.in('game').emit('big-announcement', 'the game will start soon');

  // sending to all clients in namespace 'myNamespace', including sender
  io.of('myNamespace').emit('bigger-announcement', 'the tournament will start soon');

  // sending to individual socketid (private message)
  socket.to(<socketid>).emit('hey', 'I just met you');

  // sending with acknowledgement
  socket.emit('question', 'do you think so?', function (answer) {});

  // sending without compression
  socket.compress(false).emit('uncompressed', "that's rough");

  // sending a message that might be dropped if the client is not ready to receive messages
  socket.volatile.emit('maybe', 'do you really need it?');

  // sending to all clients on this node (when using multiple nodes)
  io.local.emit('hi', 'my lovely babies');

};
